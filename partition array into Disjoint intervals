class Solution {
public:
    int partitionDisjoint(vector<int>& nums) {
        int n = nums.size();
        vector<int> minRight(n);
        minRight[n - 1] = nums[n - 1];

        // Build suffix minimums
        for (int i = n - 2; i >= 0; --i) {
            minRight[i] = min(minRight[i + 1], nums[i]);
        }

        int maxLeft = nums[0];
        for (int i = 0; i < n - 1; ++i) {
            maxLeft = max(maxLeft, nums[i]);
            if (maxLeft <= minRight[i + 1]) {
                return i + 1;
            }
        }

        return -1; // Should never reach here due to problem constraints
    }
};
